AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS Application example using a dynamodb table for a single application

Resources:

  ApplicationTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ApplicationTable
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S      
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE

      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  
  UserCommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: user-functions-common-layer
      Description: common user functions
      ContentUri: src/lambda_functions/users/common
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9

  
  UserLoginFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/lambda_functions/users/login
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Layers:
        - !Ref UserCommonLayer
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ApplicationTable
      Events:
        LoginUser:
          Type: HttpApi
          Properties:
            Path: /login
            Method: POST

  UserListFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/lambda_functions/users/list
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Layers:
        - !Ref UserCommonLayer
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ApplicationTable
      Events:
        GetAllItems:
          Type: HttpApi
          Properties:
            Path: /users
            Method: GET


  UserSeed:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/lambda_functions/users/seed
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Layers:
        - !Ref UserCommonLayer
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ApplicationTable
Outputs:
  UserLoginApi:
    Description: "API Gateway endpoint URL for Prod stage for User Login function"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/users/login"
  UserLoginFunction:
    Description: "User Login Lambda Function ARN"
    Value: !GetAtt UserLoginFunction.Arn
  UserLoginFunctionIamRole:
    Description: "Implicit IAM Role created for User Login function"
    Value: !GetAtt UserLoginFunctionRole.Arn